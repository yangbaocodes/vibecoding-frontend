/**
 * SCSS 混合 (Mixins)
 */

@use './variables.scss' as *;

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 省略号文本
@mixin ellipsis($line: 1) {
  @if $line == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $line;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

// 居中对齐
@mixin center($direction: 'both') {
  position: absolute;
  @if $direction == 'both' {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  } @else if $direction == 'horizontal' {
    left: 50%;
    transform: translateX(-50%);
  } @else if $direction == 'vertical' {
    top: 50%;
    transform: translateY(-50%);
  }
}

// Flex 布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == xs {
    @media (max-width: $breakpoint-xs - 1) {
      @content;
    }
  } @else if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  } @else if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  } @else if $breakpoint == xxl {
    @media (min-width: $breakpoint-xxl) {
      @content;
    }
  }
}

// 按钮样式
@mixin button-variant($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;

  &:hover,
  &:focus {
    color: $color;
    background-color: $background;
    border-color: $border;
    filter: brightness(0.9);
  }

  &:active {
    color: $color;
    background-color: $background;
    border-color: $border;
    filter: brightness(0.85);
  }

  &:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    filter: none;
  }
}

// 卡片样式
@mixin card($padding: $spacing-md, $radius: $border-radius-md, $shadow: $box-shadow-light) {
  background: var(--bg-color, $bg-color);
  border-radius: $radius;
  box-shadow: $shadow;
  padding: $padding;
}

// 过渡动画
@mixin transition($property: all, $duration: $transition-duration, $timing-function: ease) {
  transition: $property $duration $timing-function;
}

// 滚动条样式
@mixin scrollbar($size: 6px, $track-color: transparent, $thumb-color: rgba(0, 0, 0, 0.3)) {
  &::-webkit-scrollbar {
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-track {
    background: $track-color;
  }

  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: calc($size / 2);

    &:hover {
      background: rgba(0, 0, 0, 0.4);
    }
  }
}

// 网格布局
@mixin grid($columns: 12, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// 绝对定位填充
@mixin absolute-fill {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

// 视觉隐藏（屏幕阅读器可访问）
@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}